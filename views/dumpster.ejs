<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dumpster FIRE - Profile</title>
    <link rel='stylesheet' href='/stylesheets/dumpster.css' />
    <script src="/javascripts/jquery-3.x-git.min.js"></script>
    <!-- <script src="/javascripts/chart/Chart.js"></script> -->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <%- include('common.ejs') %>


</head>
<!-- <script src="/javascripts/dumpsterInfo.js"></script> -->

<style>
    div.background {
        z-index: 1;
        position: absolute;
        top: 50px;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.2);
        width: 80%;
        display: none;
    }

    div.input {
        margin: 200px auto;
        width: max-content;
        background-color: white;
    }

    .input {
        padding: 10px;
    }

    .input h2 {
        margin: 5px;
    }
</style>

<script type="text/javascript">


</script>


<% var dumpsterid=dumpster.DumpsterID %>
    <script type="text/javascript">

        function init() {
            $(document).ready(function () {
                let driverID = 0;
                $('.btn.assign-driver').click(function () {
                    $('.background').toggle();
                    console.log("Assign driver");
                });

                $('.btn.next').click(function () {
                    driverID = $('#driver').val();
                    $('.background').toggle();

                    let req = {
                        DriverID: driverID,
                        Dumpsters: [DumpsterID]
                    };
                    console.log("req", req);
                    $.post('/api/assign-driver', req, function (data) {
                        if (data.success) {
                            console.log('success');
                            showMessage('Message', 'Driver is assigned!');
                            // location.href = "/dumpster/" + data.sensor.DumpsterID;
                            location.reload();
                        } else {
                            console.log(data.error);
                            showMessage('Error', data.error, 'Error');
                        }
                    });
                });

                $('.btn.remove-driver').click(function () {
                    console.log("Remove driver");
                    window.location.replace("/dumpster/remove/<%= dumpster.DumpsterID %>");
                });

                $('div.background').click(function (e) {
                    console.log(e);
                    let background = document.getElementsByClassName('background')[0];
                    if (e.target == background) {
                        $('.background').hide();
                    }

                });

                $('.btn.cancel').click(function () {
                    selection = false;
                    selected = {};
                    $('.select-dumpsters').hide();
                    updateMarkers();
                });



            });

            fetch('/api/drivers', {
                method: 'get',
            })
                .then((res) => {
                    return res.json();
                })
                .then((data) => {
                    console.log(data);
                    $.each(data, function (i, item) {
                        $('#driver').append($('<option>', {
                            value: item.UserID,
                            text: item.FirstName + ' ' + item.LastName
                        }));
                    });
                })
                .catch((err) => console.log(err));

        }

        init();
        var DumpsterID = "<%= dumpsterid %>";
        console.log(DumpsterID);
        $(document).ready(function () {

            $.get('/dumpster/history/' + DumpsterID, function (d) {
                console.log(d);
                let forcast = new Date(d.forcast);
                $('#forcast').text(forcast.toDateString());
                var data;
                var chart;

                // Load the Visualization API and the piechart package.
                google.charts.load('current', { 'packages': ['corechart'] });

                // Set a callback to run when the Google Visualization API is loaded.
                google.charts.setOnLoadCallback(drawChart);


                // Callback that creates and populates a data table,
                // instantiates the pie chart, passes in the data and
                // draws it.
                function drawChart() {

                    // Create our data table.
                    data = new google.visualization.DataTable();
                    data.addColumn('datetime', 'Date');
                    data.addColumn('number', 'Fullness');
                    l = d.data.map(r => [new Date(r.label), r.y]);
                    console.log("Map", l);
                    data.addRows(l);

                    // Set chart options
                    var options = {
                        'title': 'Dumpster Fullness Level',
                        'width': 600,
                        'height': 500,
                        'lineWidth': 2,
                        legend: 'none',
                        backgroundColor: 'rgb(180, 200, 216)',
                        trendlines: {
                            0: {
                                type: 'exponential',
                                pointSize: 20,
                                opacity: 0.6,
                                pointsVisible: false
                            }
                        }
                    };

                    // Instantiate and draw our chart, passing in some options.
                    chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));
                    google.visualization.events.addListener(chart, 'select', selectHandler);
                    chart.draw(data, options);
                }

                function selectHandler() {
                    var selectedItem = chart.getSelection()[0];
                    var value = data.getValue(selectedItem.row, 0);
                    alert('The user selected ' + value);
                }
            });
        });


    </script>

    <body>
        <%- include('messageBox.ejs') %>
            <%- include('header.ejs') %>
                <div class="wrapper">
                    <%- include('nav.ejs') %>
                        <div class="content">

                            <div class="container">

                                <div class="col-3">
                                    <h1 class="title">Dumpster Information </h1>
                                    <div class="form">
                                        <label for="">Location: </label>
                                        <label for="">Calgary </label>
                                        <label for="">Designated Driver: </label>
                                        <label for="">
                                            <% if(driver){ %>
                                                <%= driver.FirstName + ' ' + driver.LastName %>
                                                    <% } else { %>
                                                        None
                                                        <% } %>
                                        </label>
                                        <label for="">Fullness Status: </label>
                                        <label for="">
                                            <%= dumpster.FullnessLevel %>%
                                        </label>
                                        <label for="">Battery Status: </label>
                                        <label for="">
                                            <%= dumpster.BatteryLevel %>%
                                        </label>
                                        <label for="">Estimated fill up date: </label>
                                        <label id='forcast' for="">2020/11/20</label>

                                    </div>
                                    <div class="btn-container">
                                        <button class="btn assign-driver">Add/Change Driver</button>
                                        <button class="btn cancel">Alert Driver</button>
                                        <button class="btn remove-driver">Remove Driver</button>
                                    </div>
                                </div>
                                <div id="chart_div" style="width:400; height:300"></div>

                            </div>

                            <div class="background">
                                <div class="input">
                                    <h2 class="title">Assign Driver</h2>
                                    <label for="driver">Driver:</label>
                                    <select name="driver" id="driver">
                                    </select>
                                    <input class='btn next' type="button" value="Next">
                                </div>
                            </div>


                        </div>
                </div>
    </body>

</html>